[project]
name = "gp-libs"
version = "0.0.9"
description = "Internal utilities for projects following git-pull python package spec"
requires-python = ">=3.8,<4.0"
authors = [
  {name = "Tony Narlock", email = "tony@git-pull.com"}
]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Utilities",
  "Topic :: System :: Shells",
]
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "tests", format = "sdist" },
]
readme = 'README.md'
keywords = []
homepage = "https://gp-libs.git-pull.com"
dependencies = [
  "myst_parser",
  "docutils"
]

[project.urls]
"Bug Tracker" = "https://github.com/git-pull/gp-libs/issues"
Documentation = "https://gp-libs.git-pull.com"
Repository = "https://github.com/git-pull/gp-libs"
Changes = "https://github.com/git-pull/gp-libs/blob/master/CHANGES"

[tool.uv]
dev-dependencies = [
  # Docs
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
  # Testing
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
  # Coverage
  "codecov",
  "coverage",
  "pytest-cov",
  # Lint
  "ruff",
  "mypy",
  "typing-extensions",
  "types-docutils",
]

[dependency-groups]
docs = [
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
]
testing = [
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
]
coverage =[
  "codecov",
  "coverage",
  "pytest-cov",
]
lint = [
  "ruff",
  "mypy",
  "typing-extensions",
  "types-docutils",
]

[project.entry-points.pytest11]
sphinx = "pytest_doctest_docutils"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["src/*.py"]

[tool.hatch.build.targets.wheel]
packages = [
  "src/docutils_compat.py",
  "src/doctest_docutils.py",
  "src/gp_libs.py",
  "src/linkify_issues.py",
  "src/pytest_doctest_docutils.py"
]

[tool.mypy]
strict = true
files = [
  "src/",
  "tests/",
]

[tool.ruff]
target-version = "py38"

[tool.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = [
  "src",
  "doctest_document",
  "docutils_compat",
  "gp_libs",
  "linkify_issues",
  "pytest_doctest_docutils",
]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "tests",
  "docs",
  "src",
]
filterwarnings = [
  "ignore:distutils Version classes are deprecated. Use packaging.version instead.",
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
]
