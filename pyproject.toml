[project]
name = "gp-libs"
version = "0.0.1a17"
description = "Internal utilities for projects following git-pull python package spec"
authors = ["Tony Narlock <tony@git-pull.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Utilities",
  "Topic :: System :: Shells",
]
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "tests", format = "sdist" },
]
readme = 'README.md'
keywords = []

homepage = "https://gp-libs.git-pull.com"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/git-pull/gp-libs/issues"
Documentation = "https://gp-libs.git-pull.com"
Repository = "https://github.com/git-pull/gp-libs"
Changes = "https://github.com/git-pull/gp-libs/blob/master/CHANGES"

[tool.poetry.dependencies]
python = "^3.7"
myst_parser = "*"
docutils = "*"

[tool.optional-dependencies]
### Docs ###
docs = [
  "sphinx",
  "furo",
  "sphinx-autodoc-typehints",
  "sphinx-autobuild",
  "sphinx-inline-tabs;python_version ^=3.7",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe"
]

### Testing ###
tests = [
  "pytest",
  "pytest-rerunfailures",
  "pytest-watcher",
]

### Coverage ###
coverage = [
  "codecov",
  "coverage",
  "pytest-cov"
]

### Format ###
format = [
  "black",
  "isort"
]

### Lint ###
lint = [
  "flake8; python_version ^3.7",
  "flake8 >=5; python_version ^3.8",
  "flake8-bugbear",
  "flake8-comprehensions",
  "mypy",
  "typing-extensions; python_version ^3.7",
  "types-docutils"
]

[tool.poetry.extras]
docs = [
  "sphinx",
  "sphinx-autodoc-typehints",
  "sphinx-autobuild",
  "sphinx-copybutton",
  "sphinxext-opengraph",
  "sphinx-inline-tabs",
  "sphinxext-rediraffe",
  "furo",
]
test = ["pytest", "pytest-rerunfailures", "pytest-watcher"]
coverage = ["codecov", "coverage", "pytest-cov"]
format = ["black", "isort"]
lint = [
  "flake8",
  "flake8-bugbear",
  "flake8-comprehensions",
  "mypy",
  "types-docutils",
  "typing-extensions",
]

[tool.poetry.plugins.pytest11]
sphinx = "pytest_doctest_docutils"

[tool.mypy]
strict = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
